package dst

import (
	"fmt"
	"testing"
)

// test against known values

func TestGamma(t *testing.T) {
	var (
		α, λ, prob float64
		i          int64
	)

	α = 9.0
	//	k=9
	λ = 0.5

	x := []float64{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}
	pdf := []float64{0, 0.0017185433, 0.0595403626, 0.2065154671, 0.2791730639, 0.2251980643, 0.1310465699, 0.0608710805, 0.0239749452, 0.0083250881, 0.0026173379, 0.0007592981, 0.0002061256, 5.29224238287655E-005, 1.29577092147652E-005, 3.045404975127E-006, 6.90694309390341E-007, 1.51819803105039E-007, 3.24584763738617E-008, 6.76998852924674E-009, 1.38105230394241E-009}
	cdf := []float64{0, 0.0002374473, 0.0213634345, 0.152762506, 0.4074526586, 0.6671803212, 0.8449722182, 0.9379448041, 0.9780127465, 0.9929439909, 0.997912741, 0.9994230988, 0.9998494373, 0.9999625849, 0.9999910876, 0.9999979539, 0.9999995453, 0.9999999018, 0.9999999793, 0.9999999957, 0.9999999991}

	fmt.Println("test of Gamma PDF")
	for i = 0; i < int64(len(x)); i++ {
		prob = GammaPDFAt(α, λ, x[i])
		if !check(prob, pdf[i]) {
			t.Error()
			fmt.Println(x[i], prob, pdf[i])

		}
	}

	fmt.Println("test of Gamma CDF")
	for i = 0; i < int64(len(x)); i++ {
		prob = GammaCDFAt(α, λ, x[i])
		if !check(prob, cdf[i]) {
			t.Error()
			fmt.Println(x[i], prob, cdf[i])
		}
	}

	p := []float64{0.00, 0.05, 0.10, 0.15, 0.20, 0.25, 0.30, 0.35, 0.40, 0.45, 0.50, 0.55, 0.60, 0.65, 0.70, 0.75, 0.80, 0.85, 0.90, 0.95}
	qtl := []float64{0.000000, 2.347614, 2.716234, 2.986563, 3.214238, 3.418823, 3.609966, 3.793453, 3.973303, 4.152696, 4.334476, 4.521503, 4.716976, 4.924828, 5.150339, 5.401222, 5.689886, 6.038868, 6.497356, 7.217325}
	fmt.Println("test of Gamma Qtl")
	for i = 0; i < int64(len(p)); i++ {
		prob = GammaQtlFor(α, λ, p[i])
		if !check(prob, qtl[i]) {
			t.Error()
			fmt.Println(p[i], prob, qtl[i])
		}
	}

	// Ln --------------
	x = []float64{0.0001, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}
	pdf = []float64{-78.049201, -6.366278, -2.821101, -1.577380, -1.275923, -1.490775, -2.032203, -2.798997, -3.730746, -4.788482, -5.945598, -7.183116, -8.487025, -9.846683, -11.253820, -12.701877, -14.185568, -15.700572, -17.243304, -18.810766, -20.400420}

	fmt.Println("test of GammaLn PDF")
	for i = 0; i < int64(len(x)); i++ {
		prob = GammaLnPDFAt(α, λ, x[i])
		if !check(prob, pdf[i]) {
			t.Error()
			fmt.Println(x[i], prob, pdf[i])
		}
	}

	cdf = []float64{-8.945675e+01, -8.345565e+00, -3.846074e+00, -1.878871e+00, -8.978305e-01, -4.046949e-01, -1.684515e-01, -6.406418e-02, -2.223258e-02, -7.081021e-03, -2.089440e-03, -5.770676e-04, -1.505740e-04, -3.741585e-05, -8.912466e-06, -2.046078e-06, -4.547407e-07, -9.820500e-08, -2.067207e-08, -4.252664e-09, -8.569271e-10}

	fmt.Println("test of GammaLn CDF")
	for i = 0; i < int64(len(x)); i++ {
		prob = GammaLnCDFAt(α, λ, x[i])
		if !check(prob, cdf[i]) {
			t.Error()
			fmt.Println(x[i], prob, cdf[i])
		}
	}

	x = []float64{0.001, 0.05, 0.10, 0.15, 0.20, 0.25, 0.30, 0.35, 0.40, 0.45, 0.50, 0.55, 0.60, 0.65, 0.70, 0.75, 0.80, 0.85, 0.90, 0.95}
	cdf = []float64{-68.735100, -33.615052, -27.466604, -23.907210, -21.407778, -19.489106, -17.937745, -16.639833, -15.527405, -14.556621, -13.697547, -12.928833, -12.234713, -11.603215, -11.025032, -10.492786, -10.000529, -9.543395, -9.117354, -8.719030}

	fmt.Println("test of GammaLn CDF")
	for i = 0; i < int64(len(x)); i++ {
		prob = GammaLnCDFAt(α, λ, x[i])
		if !check(prob, cdf[i]) {
			t.Error()
			fmt.Println(x[i], prob, cdf[i])
		}
	}


	// ---------------
	α = 2.2
	λ = 1.0
	p = []float64{0.00, 0.05, 0.10, 0.15, 0.20, 0.25, 0.30, 0.35, 0.40, 0.45, 0.50, 0.55, 0.60, 0.65, 0.70, 0.75, 0.80, 0.85, 0.90, 0.95}
	qtl = []float64{0.0000000, 0.4384522, 0.6378002, 0.8058337, 0.9607058, 1.1096650, 1.2567596, 1.4047937, 1.5560672, 1.7127510, 1.8771412, 2.0518981, 2.2403410, 2.4468857, 2.6777851, 2.9425183, 3.2567167, 3.6493236, 4.1845843, 5.0648323}
	fmt.Println("test of Gamma Qtl ")
	for i = 0; i < int64(len(p)); i++ {
		prob = GammaQtlFor(α, λ, p[i])
		if !check(prob, qtl[i]) {
			t.Error()
			fmt.Println(p[i], prob, qtl[i])
		}
	}
	fmt.Println("test of Gamma Qtl #2")
	for i = 0; i < int64(len(p)); i++ {
		prob = GammaQtl2For(α, λ, p[i])
		if !check(prob, qtl[i]) {
			t.Error()
			fmt.Println(p[i], prob, qtl[i])
		}
	}

	// ---------------
	α = 2.2
	λ = 1.12
	x = []float64{0.001, 0.05, 0.10, 0.15, 0.20, 0.25, 0.30, 0.35, 0.40, 0.45, 0.50, 0.55, 0.60, 0.65, 0.70, 0.75, 0.80, 0.85, 0.90, 0.95}
	cdf = []float64{-16.332403, -7.755980, -6.261594, -5.400006, -4.797437, -4.336747, -3.965761, -3.656646, -3.392786, -3.163465, -2.961367, -2.781271, -2.619323, -2.472597, -2.338818, -2.216181, -2.103233, -1.998784, -1.901848, -1.811600}

	fmt.Println("test of GammaLn CDF")
	for i = 0; i < int64(len(x)); i++ {
		prob = GammaLnCDFAt(α, λ, x[i])
		if !check(prob, cdf[i]) {
			t.Error()
			fmt.Println(x[i], prob, cdf[i])
		}
	}
}
